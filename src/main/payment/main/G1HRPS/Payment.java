package main.G1HRPS;

import java.util.UUID;
import java.util.List;

public class Payment {
	/**
	 * Unique generated ID
	 */
	private final UUID payment_id_;
	private int room_num_;
	private float discounts_;
	private float tax_;
	private float room_charges_;
	private float rs_charges_;
	private float bill_total_;
	private PaymentStatus status_;

	/**
	 * Payment Constructor.
	 * 
	 * @param id			UUID generated by manager
	 * @param room_num		Room associated with this payment
	 * @param discounts		Discount percentage in the range of (0.0-1.0)
	 * @param tax			Tax on bill total in the range of (0.0-1.0)
	 * @param bill_total	After deducting discounts
	 * @param status		
	 */
	public Payment(UUID id, int room_num, float discounts, float tax, float bill_total, PaymentStatus status) {
		payment_id_ = id;
		room_num_ = room_num;
		discounts_ = discounts;
		tax_ = tax;
		room_charges_ = 0;
		rs_charges_ = 0;
		bill_total_ = bill_total;
		status_ = status;
	}

	/**
	 * 
	 * @return	The payment_id of the payment
	 */

	public UUID GetPaymentID(){

		return payment_id_;

	}

	/**
	 * Assigns new room_num to this payment
	 * 
	 * @param room_num
	 */

	public void SetRoomNum(int room_num) {

		room_num_ = room_num;

	}

	/**
	 * 
	 * @return	room number of this payment
	 */

	public int GetRoomNum() {

		return room_num_;
		
	}

	/**
	 * Assigns new discount rate to this payment
	 * 
	 * @param discount
	 */

	public void SetDiscount(float discount) {

		discounts_ = discount;

	}

	/**
	 * 
	 * @return	discount rate of this payment
	 */

	public float GetDiscount() {

		return discounts_;

	}

	/**
	 * Assigns room charge of this payment
	 * 
	 * @param room_charges
	 */

	public void SetRoomCharges(float room_charges) {

		room_charges_ = room_charges;

	}

	/**
	 * 
	 * @return	room charge of this payment
	 */

	public float GetRoomCharges() {
		
		return room_charges_;

	}

	/**
	 * Assign room service charge of this payment 
	 * 
	 * @param rs_charges The new room service charge to be assigned
	 */

	public void SetRsCharges(float rs_charges) {

		rs_charges_ = rs_charges;

	}

	/**
	 * Calculates room service charge of a room
	 * from each of the room services in the list
	 * with a matching room number
	 * 
	 * @param room_service_order_list
	 */

	public void SetRsCharges(List<RoomServiceOrder> room_service_order_list) {

		int room_num;
		float rs_charges = 0;

		for(RoomServiceOrder rsOrder : room_service_order_list){
			room_num = rsOrder.GetRoomNum();
			if(this.room_num_ == room_num){
				rs_charges += rsOrder.CalTotalPrice();
			}
		}

		rs_charges_ = rs_charges;

	}

	/**
	 * 
	 * @return	The room service charge of this payment
	 */

	public float GetRsCharges() {

		return rs_charges_;

	}

	/**
	 * Assigns a new tax rate of this payment
	 * 
	 * @param tax
	 */
	public void SetTax(float tax) {
		// TODO - implement Payment.SetTax

		tax_ = tax;

	}

	/**
	 * 
	 * @return	Tax rate of this payment
	 */

	public float GetTax() {

		return tax_;
		
	}

	/**
	 * Assign a new total bill to this payment
	 * 
	 * @param bill_total
	 */
	public void SetBillTotal(float bill_total) {
		// TODO - implement Payment.SetBillTotal

		bill_total_ = bill_total;

	}

	/**
	 * Sets the total bill amount by adding room charges and room service charges,
	 * then calculate the discounted price of their sum,
	 * and finally add the tax to the final payment amount
	 * 
	 * @return
	 */

	public float SetBillTotal() {

		bill_total_ = ((room_charges_ + rs_charges_) * (1-discounts_)) * (1 + tax_);

		return bill_total_;

	}

	/**
	 * 
	 * @return	total bill of this payment
	 */

	public float GetTotalBill(){

		return bill_total_;

	}

	/**
	 * Assigns a new payment status to this payment
	 * 
	 * @param status
	 */
	public void SetStatus(PaymentStatus status) {

		status_ = status;

	}

	/**
	 * 
	 * @return	payment status of this payment
	 */

	public PaymentStatus GetStatus() {

		return status_;

	}
}